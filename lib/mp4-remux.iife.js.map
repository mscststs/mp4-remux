{"version":3,"file":"mp4-remux.iife.js","sources":["../src/boxes.class/Mp4Box.class.ts","../src/boxes.class/trex.ts","../src/boxes.class/trun.ts","../src/boxes.class/tfdt.ts","../src/boxes.class/tfhd.ts","../src/boxes.class/traf.ts","../src/boxes.class/mfhd.ts","../src/boxes.class/udta.ts","../src/boxes.class/mdia.ts","../src/boxes.class/ftyp.ts","../src/boxes.class/free.ts","../src/boxes.class/moov.ts","../src/boxes.class/moof.ts","../src/boxes.class/sidx.ts","../src/boxes.class/mdat.ts","../src/boxes.class/mvhd.ts","../src/boxes.class/mvex.ts","../src/boxes.class/tkhd.ts","../src/boxes.class/trak.ts","../src/boxes.class/edts.ts","../src/Mp4Stream.class.ts","../src/index.ts"],"sourcesContent":["import { Box } from \"./types\";\nimport * as Boxes from \".\";\n\nexport class Mp4Box {\n  stream: Uint8Array = new Uint8Array();\n  dv: DataView = new DataView(new Uint8Array().buffer);\n  boxs: Box[] = [];\n  boxPos = 0; // 记录元数据和盒子数据的偏差\n\n  constructor(buf: Uint8Array) {\n    this.stream = buf;\n    this.dv = new DataView(buf.buffer);\n  }\n\n  set size(value: number) {\n    this.writeUint(4, value);\n  }\n  get size() {\n    return this.readUint(4);\n  }\n  get type() {\n    return this.readString(4, 4);\n  }\n\n  /**\n   * 获取当前 box 的 binary\n   */\n  get raw() {\n    if (this.boxPos) {\n      let size = this.boxPos;\n      const bufs = this.boxs.map((item) => {\n        const boxRaw = item.raw;\n        size += boxRaw.length;\n        return boxRaw;\n      });\n      this.size = size;\n      const base = this.stream.slice(0, this.boxPos);\n\n      // 将 Uint8Array[] 合并成一个\n      const nbuf = new Uint8Array(size);\n      let pos = 0;\n      for (const item of [base, ...bufs]) {\n        nbuf.set(item, pos);\n        pos += item.length;\n      }\n      return nbuf;\n    }\n\n    return this.stream;\n  }\n  writeUint(size: 1 | 2 | 4, val: number, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        view.setUint8(pos, val);\n        break;\n      case 2:\n        view.setUint16(pos, val);\n        break;\n      case 4:\n        view.setUint32(pos, val);\n        break;\n    }\n  }\n  writeInt(size: 1 | 2 | 4, val: number, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        view.setInt8(pos, val);\n        break;\n      case 2:\n        view.setInt16(pos, val);\n        break;\n      case 4:\n        view.setInt32(pos, val);\n        break;\n    }\n  }\n\n  readInt(size: 1 | 2 | 4 = 4, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        return view.getInt8(pos);\n      case 2:\n        return view.getInt16(pos);\n      case 4:\n        return view.getInt32(pos);\n    }\n  }\n\n  // use dataView to Get Unsigned Int\n  readUint(size: 1 | 2 | 4, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        return view.getUint8(pos);\n      case 2:\n        return view.getUint16(pos);\n      case 4:\n        return view.getUint32(pos);\n    }\n  }\n  /**\n   * Read string by char code from Uint8Array\n   * @param size\n   */\n  readString(size: 4, pos = 0) {\n    let s = \"\";\n    for (let i = 0; i < size; i++) {\n      s += String.fromCharCode(this.readUint(1, pos + i));\n    }\n    return s;\n  }\n\n  parse(boxPos: number) {\n    this.boxPos = boxPos;\n    let pos = boxPos;\n    while (pos <= this.stream.length - 8) {\n      const size = this.readUint(4, pos);\n      const type = this.readString(4, 4 + pos);\n      if (size <= this.stream.length) {\n        const tBuf = this.stream.slice(pos, pos + size);\n\n        const BoxClass = Boxes[type as keyof typeof Boxes] || Boxes.free;\n        this.boxs.push(new BoxClass(tBuf));\n      }\n      pos += size;\n    }\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class trex extends Mp4Box {\n\n  get version() {\n    return this.readUint(1, 8);\n  }\n  get track_id():number{\n    return this.readUint(4,12);\n  }\n  set track_id(value){\n    this.writeUint(4,value,12);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class trun extends Mp4Box {\n  get sample_count() {\n    return this.readUint(4, 12);\n  }\n  get data_offset() {\n    return this.readInt(4, 16);\n  }\n  set data_offset(val) {\n    this.writeInt(4, val, 16);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class tfdt extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class tfhd extends Mp4Box {\n  get version() {\n    return this.readUint(1, 8);\n  }\n  get track_id():number{\n    return this.readUint(4,12);\n  }\n  set track_id(value){\n    this.writeUint(4,value,12);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\nimport { trun, tfhd } from \".\";\n\nexport class traf extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n  get tfhd() {\n    return this.boxs.find((box) => box instanceof tfhd) as tfhd;\n  }\n  get trun() {\n    return this.boxs.find((box) => box instanceof trun) as trun;\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mfhd extends Mp4Box {\n  get sequence_number() {\n    return this.readUint(4, 12);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class udta extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mdia extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class ftyp extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class free extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\nimport {mvhd,mvex,trak} from \".\";\n\nexport class moov extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n\n  get mvhd() {\n    return this.boxs.find((box) => box instanceof mvhd) as mvhd;\n  }\n  get mvex(){\n    return this.boxs.find((box) => box instanceof mvex) as mvex;\n  }\n  get trak(){\n    return this.boxs.find((box) => box instanceof trak) as trak\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\nimport { mfhd, traf } from \"./\";\n\nexport class moof extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n  get mfhd(){\n    return this.boxs.find((box) => box instanceof mfhd) as mfhd\n  }\n  get traf(){\n    return this.boxs.find((box) => box instanceof traf) as traf\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class sidx extends Mp4Box {\n  get version() {\n    return this.readUint(1, 8);\n  }\n  get reference_ID() {\n    return this.readUint(4, 12);\n  }\n  get timescale() {\n    return this.readUint(4, 16);\n  }\n  get reserved() {\n    let offset = 8 + 20;\n    if (this.version !== 0) {\n      offset = 16 + 20;\n    }\n    return this.readUint(2, offset);\n  }\n  get reference_count() {\n    let offset = 8 + 20;\n    if (this.version !== 0) {\n      offset = 16 + 20;\n    }\n    offset += 2;\n    return this.readUint(2, offset);\n  }\n  get refList() {\n    let offset = 8 + 24;\n    if (this.version !== 0) {\n      offset = 16 + 24;\n    }\n    const refrenceCount = this.reference_count;\n    const resList = [];\n    for (let i = 0; i < refrenceCount; i++) {\n      const pos = offset + i * 12; // Position\n      let tmp_32 = this.readUint(4, pos);\n      const reference_type = (tmp_32 >> 31) & 0x1;\n      const referenced_size = tmp_32 & 0x7fffffff;\n      const subsegment_duration = this.readUint(4, pos + 4);\n      tmp_32 = this.readUint(4, pos + 8);\n      const starts_with_SAP = (tmp_32 >> 31) & 0x1;\n      const SAP_type = (tmp_32 >> 28) & 0x7;\n      const SAP_delta_time = tmp_32 & 0xfffffff;\n      resList.push({\n        reference_type,\n        referenced_size,\n        subsegment_duration,\n        starts_with_SAP,\n        SAP_type,\n        SAP_delta_time,\n      });\n    }\n    return resList;\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mdat extends Mp4Box {\n  push(value: Uint8Array) {\n    // 向 stream 追加数据\n\n    const newBuf = new Uint8Array(this.stream.length + value.length);\n    newBuf.set(this.stream);\n    newBuf.set(value, this.stream.length);\n    this.stream = newBuf;\n    this.dv = new DataView(this.stream.buffer);\n    this.size = newBuf.length;\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mvhd extends Mp4Box {\n\n  get version() {\n    return this.readUint(1, 8);\n  }\n\n  get next_track_ID(){\n    if(this.version === 0){\n      return this.readUint(4,104);\n    }else{\n      return this.readUint(4,116);\n    }\n  }\n  set next_track_ID(value){\n    if(this.version === 0){\n      this.writeUint(4,value,104);\n    }else{\n      this.writeUint(4,value,116);\n    }\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\nimport {trex} from \"./\";\n\nexport class mvex extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n\n\n  }\n  get trex(){\n    return this.boxs.find((box) => box instanceof trex) as trex\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class tkhd extends Mp4Box {\n  get version() {\n    return this.readUint(1, 8);\n  }\n\n  get track_id():number{\n    if(this.version === 1){\n      return this.readUint(4, 28);\n    }else{\n      return this.readUint(4,20);\n    }\n  }\n  set track_id(value){\n    if(this.version === 1){\n      this.writeUint(4,value,28);\n    }else{\n      this.writeUint(4,value,20);\n    }\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\nimport { tkhd } from \"./tkhd\";\n\nexport class trak extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n  get tkhd(): tkhd {\n    return this.boxs.find((box) => box instanceof tkhd) as tkhd;\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class edts extends Mp4Box {}\n","import * as Boxes from \"./boxes.class\";\nimport { Box } from \"./boxes.class/types\";\n\nexport class Mp4Stream {\n  stream: Uint8Array = new Uint8Array();\n  dv: DataView = new DataView(new Uint8Array().buffer);\n  boxs: Box[] = [];\n  isEnd = false;\n\n  get sidx() {\n    return this.boxs.find((box) => box instanceof Boxes.sidx) as Boxes.sidx;\n  }\n  get moov() {\n    return this.boxs.find((box) => box instanceof Boxes.moov) as Boxes.moov;\n  }\n\n  push(value: Uint8Array) {\n    const newBuf = new Uint8Array(this.stream.length + value.length);\n    newBuf.set(this.stream);\n    newBuf.set(value, this.stream.length);\n    this.stream = newBuf;\n    this.dv = new DataView(this.stream.buffer);\n  }\n\n  /**\n   * 将stream 截断，把pos前的数据返回，然后更新dataView\n   * @param pos\n   */\n  slice(pos: number) {\n    const sliceBuf = this.stream.slice(0, pos);\n    const newBuf = new Uint8Array(this.stream.length - pos);\n    newBuf.set(this.stream.slice(pos));\n    this.stream = newBuf;\n    this.dv = new DataView(this.stream.buffer);\n    return sliceBuf;\n  }\n  // use dataView to Get Unsigned Int\n  readUint(size: 1 | 2 | 4, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        return view.getUint8(pos);\n      case 2:\n        return view.getUint16(pos);\n      case 4:\n        return view.getUint32(pos);\n    }\n  }\n  /**\n   * Read string by char code from Uint8Array\n   * @param size\n   */\n  readString(size: 4, pos = 0) {\n    let s = \"\";\n    for (let i = 0; i < size; i++) {\n      s += String.fromCharCode(this.readUint(1, pos + i));\n    }\n    return s;\n  }\n  parse() {\n    // 检查this.stream 的长度是否足够 2*4*8\n    if (this.stream.length < 8) {\n      return; // Not Enough\n    }\n\n    const size = this.readUint(4);\n    const type = this.readString(4, 4);\n\n    if (size <= this.stream.length) {\n      const tBuf = this.slice(size);\n\n      const BoxClass = Boxes[type as keyof typeof Boxes] || Boxes.free;\n      this.boxs.push(new BoxClass(tBuf));\n\n      this.parse(); // 继续向后解析\n    }\n  }\n\n  end() {\n    this.isEnd = true;\n  }\n}\n","import { Mp4Stream } from \"./Mp4Stream.class\";\nimport * as Boxes from \"./boxes.class\";\n\nexport default function remux(vs: ReadableStream, as: ReadableStream) {\n  //  读取两个stream的数据\n  const videoReader = vs.getReader();\n  const audioReader = as.getReader();\n\n  const videoStream = new Mp4Stream();\n  const audioStream = new Mp4Stream();\n\n  const { readable, writable } = new TransformStream();\n  const writer = writable.getWriter();\n\n  let status = -1;\n\n  function callWrite(buf: Uint8Array) {\n    writer.write(buf);\n  }\n\n  async function checkStream() {\n    if (status === -1) {\n      // 合并 moov 中的 track 信息\n      const videoMoov = videoStream.moov;\n      const audioMoov = audioStream.moov;\n      if (videoMoov && audioMoov) {\n\n        const videoMvex = videoMoov.mvex;\n        const audioMvex = audioMoov.mvex;\n        if (videoMvex && audioMvex) {\n          const videoTrex = videoMvex.trex;\n          const audioTrex = audioMvex.trex;\n\n          videoTrex.track_id = 1;\n          audioTrex.track_id = 2;\n\n          // console.log(videoMvex, audioMvex);\n          videoMvex.boxs = [];\n          videoTrex && videoMvex.boxs.push(videoTrex);\n          audioTrex && videoMvex.boxs.push(audioTrex);\n        }\n\n        const videoTrak = videoMoov.trak;\n        const audioTrak = audioMoov.trak;\n        if (videoTrak && audioTrak) {\n          videoTrak.tkhd.track_id = 1;\n          audioTrak.tkhd.track_id = 2;\n\n          videoMoov.boxs.push(audioTrak);\n          for (const item of videoStream.boxs) {\n            callWrite(item.raw);\n            if (item === videoMoov) {\n              break;\n            }\n          }\n          status = 1;\n        }\n      }\n    }\n\n    // 需要先有 sidx\n    if (!videoStream.sidx || !audioStream.sidx) {\n      return;\n    }\n\n    if (status !== -1) {\n      const videoMaxIndex = videoStream.sidx.reference_count;\n      const audioMaxIndex = audioStream.sidx.reference_count;\n      if (status <= videoMaxIndex && status <= audioMaxIndex) {\n        // 合并\n\n        // Step1 获取需要的分片数据\n        const videoMoof = videoStream.boxs.find((item) => {\n          return (\n            item instanceof Boxes.moof && item?.mfhd.sequence_number === status\n          );\n        }) as Boxes.moof;\n        const audioMoof = audioStream.boxs.find((item) => {\n          return (\n            item instanceof Boxes.moof && item?.mfhd.sequence_number === status\n          );\n        }) as Boxes.moof;\n        const videoData = videoMoof && (videoStream.boxs[videoStream.boxs.indexOf(videoMoof) + 1] as Boxes.mdat);\n        const audioData = audioMoof && (audioStream.boxs[audioStream.boxs.indexOf(audioMoof) + 1] as Boxes.mdat);\n\n        if (videoMoof && videoData && audioMoof && audioData) {\n          // 处理合并流程\n          const videoTraf = videoMoof.traf;\n          const audioTraf = audioMoof.traf;\n\n          videoTraf.tfhd.track_id = 1;\n          audioTraf.tfhd.track_id = 2;\n          if (videoTraf?.trun && audioTraf?.trun) {\n            const audioTrafSize = audioTraf.size;\n            const videoMoofSize = videoMoof.size;\n            const videoDataSize = videoData.size;\n            videoTraf.trun.data_offset = videoMoofSize + audioTrafSize + 8;\n            audioTraf.trun.data_offset = videoMoofSize + audioTrafSize + videoDataSize;\n\n            videoMoof.boxs.push(audioTraf);\n\n            callWrite(videoMoof.raw);\n\n            // 处理 mdat 合并\n            videoData.push(audioData.raw.slice(8));\n            callWrite(videoData.raw);\n\n            // 释放存储空间\n            videoStream.boxs = videoStream.boxs.filter((item) => item !== videoMoof);\n            videoStream.boxs = videoStream.boxs.filter((item) => item !== videoData);\n            audioStream.boxs = audioStream.boxs.filter((item) => item !== audioMoof);\n            audioStream.boxs = audioStream.boxs.filter((item) => item !== audioData);\n\n            status += 1;\n            checkStream();\n          }\n        }\n      } else if (status > videoMaxIndex && status <= audioMaxIndex) {\n        // 追加 audio\n        const audioMoof = audioStream.boxs.find((item) => {\n          return (\n            item instanceof Boxes.moof && item?.mfhd.sequence_number === status\n          );\n        }) as Boxes.moof;\n        audioMoof.traf.tfhd.track_id = 2;\n        const audioData = audioMoof && (audioStream.boxs[audioStream.boxs.indexOf(audioMoof) + 1] as Boxes.mdat);\n        if (audioMoof && audioData) {\n          callWrite(audioMoof.raw);\n          callWrite(audioData.raw);\n          status += 1;\n          checkStream();\n        }\n      } else if (status > audioMaxIndex && status <= videoMaxIndex) {\n        // 追加 Video\n        const videoMoof = videoStream.boxs.find((item) => {\n          return (\n            item instanceof Boxes.moof && item?.mfhd.sequence_number === status\n          );\n        }) as Boxes.moof;\n        videoMoof.traf.tfhd.track_id = 1;\n        const videoData = videoMoof && (videoStream.boxs[videoStream.boxs.indexOf(videoMoof) + 1] as Boxes.mdat);\n        if (videoMoof && videoData) {\n          callWrite(videoMoof.raw);\n          callWrite(videoData.raw);\n          status += 1;\n          checkStream();\n        }\n      } else if (status > videoMaxIndex && status > audioMaxIndex) {\n        // end\n        status = -2;\n        // console.log(\"call close\", status, videoMaxIndex, audioMaxIndex);\n        // writer.releaseLock();\n        writer.close();\n      }\n    }\n  }\n\n  // 并行读取两个reader的数据\n  async function readerHandler(streamReader: ReadableStreamDefaultReader<any>, mp4Stream: Mp4Stream) {\n    while (true) {\n      const { done, value } = await streamReader.read();\n      if (value) {\n        mp4Stream.push(value);\n        mp4Stream.parse();\n\n        checkStream();\n      }\n      // 将value拼接到 chunk后\n\n      if (done) {\n        mp4Stream.end();\n        checkStream();\n        break;\n      }\n    }\n  }\n\n  readerHandler(videoReader, videoStream);\n  readerHandler(audioReader, audioStream);\n  return readable;\n}\n"],"names":["Mp4Box","buf","__publicField","value","size","bufs","item","boxRaw","base","nbuf","pos","val","view","s","i","boxPos","type","tBuf","BoxClass","Boxes","Boxes.free","trex","trun","tfdt","tfhd","traf","box","mfhd","udta","mdia","ftyp","free","moov","mvhd","mvex","trak","moof","sidx","offset","refrenceCount","resList","tmp_32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","mdat","newBuf","tkhd","edts","Mp4Stream","Boxes.sidx","Boxes.moov","sliceBuf","remux","vs","as","videoReader","audioReader","videoStream","audioStream","readable","writable","writer","status","callWrite","checkStream","videoMoov","audioMoov","videoMvex","audioMvex","videoTrex","audioTrex","videoTrak","audioTrak","videoMaxIndex","audioMaxIndex","videoMoof","Boxes.moof","audioMoof","videoData","audioData","videoTraf","audioTraf","audioTrafSize","videoMoofSize","videoDataSize","readerHandler","streamReader","mp4Stream","done"],"mappings":"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"}