{"version":3,"file":"mp4-remux.umd.cjs","sources":["../src/boxes.class/Mp4Box.class.ts","../src/boxes.class/trex.ts","../src/boxes.class/trun.ts","../src/boxes.class/tfdt.ts","../src/boxes.class/tfhd.ts","../src/boxes.class/traf.ts","../src/boxes.class/mfhd.ts","../src/boxes.class/udta.ts","../src/boxes.class/mdia.ts","../src/boxes.class/ftyp.ts","../src/boxes.class/free.ts","../src/boxes.class/moov.ts","../src/boxes.class/moof.ts","../src/boxes.class/sidx.ts","../src/boxes.class/mdat.ts","../src/boxes.class/mvhd.ts","../src/boxes.class/mvex.ts","../src/boxes.class/trak.ts","../src/boxes.class/tkhd.ts","../src/boxes.class/edts.ts","../src/Mp4Stream.class.ts","../src/index.ts"],"sourcesContent":["import { Box } from \"./types\";\nimport * as Boxes from \".\";\n\nexport class Mp4Box {\n  stream: Uint8Array = new Uint8Array();\n  dv: DataView = new DataView(new Uint8Array().buffer);\n  boxs: Box[] = [];\n  boxPos = 0; // 记录元数据和盒子数据的偏差\n\n  constructor(buf: Uint8Array) {\n    this.stream = buf;\n    this.dv = new DataView(buf.buffer);\n  }\n\n  set size(value: number) {\n    this.writeUint(4, value);\n  }\n  get size() {\n    return this.readUint(4);\n  }\n  get type() {\n    return this.readString(4, 4);\n  }\n\n  /**\n   * 获取当前 box 的 binary\n   */\n  get raw() {\n    if (this.boxPos) {\n      let size = this.boxPos;\n      const bufs = this.boxs.map((item) => {\n        const boxRaw = item.raw;\n        size += boxRaw.length;\n        return boxRaw;\n      });\n      this.size = size;\n      const base = this.stream.slice(0, this.boxPos);\n\n      // 将 Uint8Array[] 合并成一个\n      const nbuf = new Uint8Array(size);\n      let pos = 0;\n      for (const item of [base, ...bufs]) {\n        nbuf.set(item, pos);\n        pos += item.length;\n      }\n      return nbuf;\n    }\n\n    return this.stream;\n  }\n  writeUint(size: 1 | 2 | 4, val: number, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        view.setUint8(pos, val);\n        break;\n      case 2:\n        view.setUint16(pos, val);\n        break;\n      case 4:\n        view.setUint32(pos, val);\n        break;\n    }\n  }\n  writeInt(size: 1 | 2 | 4, val: number, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        view.setInt8(pos, val);\n        break;\n      case 2:\n        view.setInt16(pos, val);\n        break;\n      case 4:\n        view.setInt32(pos, val);\n        break;\n    }\n  }\n\n  readInt(size: 1 | 2 | 4 = 4, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        return view.getInt8(pos);\n      case 2:\n        return view.getInt16(pos);\n      case 4:\n        return view.getInt32(pos);\n    }\n  }\n\n  // use dataView to Get Unsigned Int\n  readUint(size: 1 | 2 | 4, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        return view.getUint8(pos);\n      case 2:\n        return view.getUint16(pos);\n      case 4:\n        return view.getUint32(pos);\n    }\n  }\n  /**\n   * Read string by char code from Uint8Array\n   * @param size\n   */\n  readString(size: 4, pos = 0) {\n    let s = \"\";\n    for (let i = 0; i < size; i++) {\n      s += String.fromCharCode(this.readUint(1, pos + i));\n    }\n    return s;\n  }\n\n  parse(boxPos: number) {\n    this.boxPos = boxPos;\n    let pos = boxPos;\n    while (pos <= this.stream.length - 8) {\n      const size = this.readUint(4, pos);\n      const type = this.readString(4, 4 + pos);\n      if (size <= this.stream.length) {\n        const tBuf = this.stream.slice(pos, pos + size);\n\n        const BoxClass = Boxes[type as keyof typeof Boxes] || Boxes.free;\n        this.boxs.push(new BoxClass(tBuf));\n      }\n      pos += size;\n    }\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class trex extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class trun extends Mp4Box {\n  get sample_count() {\n    return this.readUint(4, 12);\n  }\n  get data_offset() {\n    return this.readInt(4, 16);\n  }\n  set data_offset(val) {\n    this.writeInt(4, val, 16);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class tfdt extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class tfhd extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\nimport { trun } from \"./trun\";\n\nexport class traf extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n  get trun() {\n    return this.boxs.find((box) => box instanceof trun) as trun;\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mfhd extends Mp4Box {\n  get sequence_number() {\n    return this.readUint(4, 12);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class udta extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mdia extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class ftyp extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class free extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class moov extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class moof extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class sidx extends Mp4Box {\n  get version() {\n    return this.readUint(1, 8);\n  }\n  get reference_ID() {\n    return this.readUint(4, 12);\n  }\n  get timescale() {\n    return this.readUint(4, 16);\n  }\n  get reserved() {\n    let offset = 8 + 20;\n    if (this.version !== 0) {\n      offset = 16 + 20;\n    }\n    return this.readUint(2, offset);\n  }\n  get reference_count() {\n    let offset = 8 + 20;\n    if (this.version !== 0) {\n      offset = 16 + 20;\n    }\n    offset += 2;\n    return this.readUint(2, offset);\n  }\n  get refList() {\n    let offset = 8 + 24;\n    if (this.version !== 0) {\n      offset = 16 + 24;\n    }\n    const refrenceCount = this.reference_count;\n    const resList = [];\n    for (let i = 0; i < refrenceCount; i++) {\n      const pos = offset + i * 12; // Position\n      let tmp_32 = this.readUint(4, pos);\n      const reference_type = (tmp_32 >> 31) & 0x1;\n      const referenced_size = tmp_32 & 0x7fffffff;\n      const subsegment_duration = this.readUint(4, pos + 4);\n      tmp_32 = this.readUint(4, pos + 8);\n      const starts_with_SAP = (tmp_32 >> 31) & 0x1;\n      const SAP_type = (tmp_32 >> 28) & 0x7;\n      const SAP_delta_time = tmp_32 & 0xfffffff;\n      resList.push({\n        reference_type,\n        referenced_size,\n        subsegment_duration,\n        starts_with_SAP,\n        SAP_type,\n        SAP_delta_time,\n      });\n    }\n    return resList;\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mdat extends Mp4Box {\n  push(value: Uint8Array) {\n    // 向 stream 追加数据\n\n    const newBuf = new Uint8Array(this.stream.length + value.length);\n    newBuf.set(this.stream);\n    newBuf.set(value, this.stream.length);\n    this.stream = newBuf;\n    this.dv = new DataView(this.stream.buffer);\n    this.size = newBuf.length;\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mvhd extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class mvex extends Mp4Box {\n  constructor(buf: Uint8Array) {\n    super(buf);\n    this.parse(8);\n  }\n}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class trak extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class tkhd extends Mp4Box {}\n","import { Mp4Box } from \"./Mp4Box.class\";\n\nexport class edts extends Mp4Box {}\n","import * as Boxes from \"./boxes.class\";\nimport { Box } from \"./boxes.class/types\";\nimport { sidx } from \"./boxes.class/sidx\";\n\nexport class Mp4Stream {\n  stream: Uint8Array = new Uint8Array();\n  dv: DataView = new DataView(new Uint8Array().buffer);\n  boxs: Box[] = [];\n  isEnd = false;\n\n  get sidx() {\n    return this.boxs.find((box) => box.type === \"sidx\") as sidx;\n  }\n  get moov() {\n    return this.boxs.find((box) => box.type === \"moov\");\n  }\n\n  push(value: Uint8Array) {\n    const newBuf = new Uint8Array(this.stream.length + value.length);\n    newBuf.set(this.stream);\n    newBuf.set(value, this.stream.length);\n    this.stream = newBuf;\n    this.dv = new DataView(this.stream.buffer);\n  }\n\n  /**\n   * 将stream 截断，把pos前的数据返回，然后更新dataView\n   * @param pos\n   */\n  slice(pos: number) {\n    const sliceBuf = this.stream.slice(0, pos);\n    const newBuf = new Uint8Array(this.stream.length - pos);\n    newBuf.set(this.stream.slice(pos));\n    this.stream = newBuf;\n    this.dv = new DataView(this.stream.buffer);\n    return sliceBuf;\n  }\n  // use dataView to Get Unsigned Int\n  readUint(size: 1 | 2 | 4, pos = 0) {\n    const view = this.dv;\n    switch (size) {\n      case 1:\n        return view.getUint8(pos);\n      case 2:\n        return view.getUint16(pos);\n      case 4:\n        return view.getUint32(pos);\n    }\n  }\n  /**\n   * Read string by char code from Uint8Array\n   * @param size\n   */\n  readString(size: 4, pos = 0) {\n    let s = \"\";\n    for (let i = 0; i < size; i++) {\n      s += String.fromCharCode(this.readUint(1, pos + i));\n    }\n    return s;\n  }\n  parse() {\n    // 检查this.stream 的长度是否足够 2*4*8\n    if (this.stream.length < 8) {\n      return; // Not Enough\n    }\n\n    const size = this.readUint(4);\n    const type = this.readString(4, 4);\n\n    if (size <= this.stream.length) {\n      const tBuf = this.slice(size);\n\n      const BoxClass = Boxes[type as keyof typeof Boxes] || Boxes.free;\n      this.boxs.push(new BoxClass(tBuf));\n\n      this.parse(); // 继续向后解析\n    }\n  }\n\n  end() {\n    this.isEnd = true;\n  }\n}\n","import { Mp4Stream } from \"./Mp4Stream.class\";\nimport * as Boxes from \"./boxes.class\";\n\nexport default function remux(vs: ReadableStream, as: ReadableStream) {\n  //  读取两个stream的数据\n  const videoReader = vs.getReader();\n  const audioReader = as.getReader();\n\n  const videoStream = new Mp4Stream();\n  const audioStream = new Mp4Stream();\n\n  const { readable, writable } = new TransformStream();\n  const writer = writable.getWriter();\n\n  let status = -1;\n\n  function callWrite(buf: Uint8Array) {\n    writer.write(buf);\n  }\n\n  async function checkStream() {\n    if (status === -1) {\n      // 合并 moov 中的 track 信息\n      const videoMoov = videoStream.moov;\n      const audioMoov = audioStream.moov;\n      if (videoMoov && audioMoov) {\n        const audioTrak = audioMoov.boxs.find((item) => item instanceof Boxes.trak) as Boxes.trak;\n\n        const videoMvex = videoMoov.boxs.find((item) => item instanceof Boxes.mvex) as Boxes.mvex;\n        const audioMvex = audioMoov.boxs.find((item) => item instanceof Boxes.mvex) as Boxes.mvex;\n        if (videoMvex && audioMvex) {\n          const videoTrex = videoMvex.boxs.find((item) => item instanceof Boxes.trex);\n          const audioTrex = audioMvex.boxs.find((item) => item instanceof Boxes.trex);\n\n          // console.log(videoMvex, audioMvex);\n          videoMvex.boxs = [];\n          videoTrex && videoMvex.boxs.push(videoTrex);\n          audioTrex && videoMvex.boxs.push(audioTrex);\n        }\n        if (audioTrak) {\n          videoMoov.boxs.push(audioTrak);\n          for (const item of videoStream.boxs) {\n            callWrite(item.raw);\n            if (item === videoMoov) {\n              break;\n            }\n          }\n          status = 1;\n        }\n      }\n    }\n\n    // 需要先有 sidx\n    if (!videoStream.sidx || !audioStream.sidx) {\n      return;\n    }\n\n    if (status !== -1) {\n      const videoMaxIndex = videoStream.sidx.reference_count;\n      const audioMaxIndex = audioStream.sidx.reference_count;\n      if (status <= videoMaxIndex && status <= audioMaxIndex) {\n        // 合并\n\n        // Step1 获取需要的分片数据\n        const videoMoof = videoStream.boxs.find((item) => {\n          return (\n            item instanceof Boxes.moof && item.boxs[0] instanceof Boxes.mfhd && item.boxs[0].sequence_number === status\n          );\n        });\n        const audioMoof = audioStream.boxs.find((item) => {\n          return (\n            item instanceof Boxes.moof && item.boxs[0] instanceof Boxes.mfhd && item.boxs[0].sequence_number === status\n          );\n        });\n        const videoData = videoMoof && (videoStream.boxs[videoStream.boxs.indexOf(videoMoof) + 1] as Boxes.mdat);\n        const audioData = audioMoof && (audioStream.boxs[audioStream.boxs.indexOf(audioMoof) + 1] as Boxes.mdat);\n\n        if (videoMoof && videoData && audioMoof && audioData) {\n          // 处理合并流程\n          const videoTraf = videoMoof.boxs.find((item) => item instanceof Boxes.traf) as Boxes.traf;\n          const audioTraf = audioMoof.boxs.find((item) => item instanceof Boxes.traf) as Boxes.traf;\n          if (videoTraf?.trun && audioTraf?.trun) {\n            const audioTrafSize = audioTraf.size;\n            const videoMoofSize = videoMoof.size;\n            const videoDataSize = videoData.size;\n            videoTraf.trun.data_offset = videoMoofSize + audioTrafSize + 8;\n            audioTraf.trun.data_offset = videoMoofSize + audioTrafSize + videoDataSize;\n\n            videoMoof.boxs.push(audioTraf);\n\n            callWrite(videoMoof.raw);\n\n            // 处理 mdat 合并\n            videoData.push(audioData.raw.slice(8));\n            callWrite(videoData.raw);\n\n            // 释放存储空间\n            videoStream.boxs = videoStream.boxs.filter((item) => item !== videoMoof);\n            videoStream.boxs = videoStream.boxs.filter((item) => item !== videoData);\n            audioStream.boxs = audioStream.boxs.filter((item) => item !== audioMoof);\n            audioStream.boxs = audioStream.boxs.filter((item) => item !== audioData);\n\n            status += 1;\n            checkStream();\n          }\n        }\n      } else if (status > videoMaxIndex && status <= audioMaxIndex) {\n        // 追加 audio\n        const audioMoof = audioStream.boxs.find((item) => {\n          return (\n            item instanceof Boxes.moof && item.boxs[0] instanceof Boxes.mfhd && item.boxs[0].sequence_number === status\n          );\n        });\n        const audioData = audioMoof && (audioStream.boxs[audioStream.boxs.indexOf(audioMoof) + 1] as Boxes.mdat);\n        if (audioMoof && audioData) {\n          callWrite(audioMoof.raw);\n          callWrite(audioData.raw);\n          status += 1;\n          checkStream();\n        }\n      } else if (status > videoMaxIndex && status > audioMaxIndex) {\n        // end\n        status = -2;\n        // console.log(\"call close\", status, videoMaxIndex, audioMaxIndex);\n        // writer.releaseLock();\n        writer.close();\n      }\n    }\n  }\n\n  // 并行读取两个reader的数据\n  async function readerHandler(streamReader: ReadableStreamDefaultReader<any>, mp4Stream: Mp4Stream) {\n    while (1) {\n      const { done, value } = await streamReader.read();\n      if (value) {\n        mp4Stream.push(value);\n        mp4Stream.parse();\n\n        checkStream();\n      }\n      // 将value拼接到 chunk后\n\n      if (done) {\n        mp4Stream.end();\n        checkStream();\n        break;\n      }\n    }\n  }\n\n  readerHandler(videoReader, videoStream);\n  readerHandler(audioReader, audioStream);\n  return readable;\n}\n"],"names":["Mp4Box","buf","__publicField","value","size","bufs","item","boxRaw","base","nbuf","pos","val","view","i","boxPos","type","tBuf","BoxClass","Boxes","Boxes.free","trex","trun","tfdt","tfhd","traf","box","mfhd","udta","mdia","ftyp","free","moov","moof","sidx","offset","refrenceCount","resList","tmp_32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","mdat","newBuf","mvhd","mvex","trak","tkhd","edts","Mp4Stream","sliceBuf","remux","vs","as","videoReader","audioReader","videoStream","audioStream","readable","writable","writer","status","callWrite","checkStream","videoMoov","audioMoov","audioTrak","Boxes.trak","videoMvex","Boxes.mvex","audioMvex","videoTrex","Boxes.trex","audioTrex","videoMaxIndex","audioMaxIndex","videoMoof","Boxes.moof","Boxes.mfhd","audioMoof","videoData","audioData","videoTraf","Boxes.traf","audioTraf","audioTrafSize","videoMoofSize","videoDataSize","readerHandler","streamReader","mp4Stream","done"],"mappings":"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"}